#version 450

in vec3 position;
in vec3 normal;
in vec2 uv;

out vec3 color;
out vec2 uv_frag;

vec3 light_color = vec3(1.0, 1.0, 1.0);

uniform vec3 light_pos;
uniform mat4 model_view_matrix;
uniform mat4 projection_matrix;

uniform mat4 transform;

vec3 object_color = vec3(1.0, 1.0, 1.0);
float ambientStrength = 0.1;

void main() {
  gl_Position = projection_matrix * model_view_matrix * transform * vec4(position, 1.0);

  float c = clamp(dot(normalize(position - light_pos), normal), 0.0, 1.0);
  vec3 ambient = ambientStrength * light_color;
  vec3 result = ambient * object_color;
  color = object_color * c + result;
  uv_frag = uv;
}
